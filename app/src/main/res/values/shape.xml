<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--Shape-->
    <!--Experiment with ShapeAppearance properties such as cornerFamily (either ‘cut’ or -->
    <!--‘rounded’) and corner size. Alternatively, customize each ShapeAppearance on a -->
    <!--per-corner basis with cornerFamilyTopLeft, cornerFamilyTopRight, cornerFamilyBottomLeft, -->
    <!--cornerFamilyBottomRight and cornerSizeTopRight, cornerSizeTopLeft, cornerSizeBottomLeft -->
    <!--and cornerSizeBottomRight.-->

    <!--Shape Appearance for small components like chips, buttons, text fields and FABs-->
    <style name="ShapeAppearance.MyTheme.SmallComponent" parent="ShapeAppearance.MaterialComponents.SmallComponent">
        <!--Your custom shape here-->
    </style>

    <!--Shape Appearance for medium components like cards, alert dialogs-->
    <style name="ShapeAppearance.MyTheme.MediumComponent" parent="ShapeAppearance.MaterialComponents.MediumComponent">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSize">@dimen/cornerSize</item>
    </style>

    <!--Shape Appearance for large components like side and bottom navigation drawers-->
    <style name="ShapeAppearance.MyTheme.LargeComponent" parent="ShapeAppearance.MaterialComponents.LargeComponent">
        <!--Your custom shape here-->
    </style>

    <!--Shape Appearance overlay for ShapeableImageView -->
    <style name="ShapeAppearanceOverlay.MyTheme.Image" parent="">
        <item name="cornerSize">0dp</item>
        <item name="cornerSizeTopLeft">50%</item>
    </style>

</resources>